<?php
/**
 * DUDAMOBILE API CONNECTION CLASS
 *
 * @author Dudamobile
 * @link http://www.dudamobile.com
 */
class DudaMobile_Connection {

    private $api_url = '';
    private $api_login = '';
    private $api_password = '';

    public $fp;

    

    public function __construct($url, $username, $password) {
        $this->api_url = $url;
        $this->api_login = $username;
        $this->api_password = $password;

        $this->_initFsock();
    }
    
    private function _initFsock() {
        
        $this->fp = fsockopen($this->api_url, '443', $errno, $errstr, 5);
        if(!$this->fp){
            die("Error: $errstr ($errno)\n");
        }
    }

    public function sendRequest($method,$resource,$data=array()) {
        
        fputs($this->fp, "$method $resource HTTP/1.0\r\n");
        fputs($this->fp, "Host: {$this->api_url}\r\n");
        fputs($this->fp, "Authorization: Basic ".base64_encode($this->api_login.":".$this->api_password)."\r\n");

        if(!empty($data)){
            fputs($this->fp, "Content-Type: application/json\r\n");
            fputs($this->fp, "Accept: application/json\r\n");
            if($data){
                $poststring=json_encode($data);
            }
   
            fputs($this->fp, "Content-length: ".strlen($poststring)."\r\n");
        }

        
        fputs($this->fp, "Connection: close\r\n");
        fputs($this->fp,"\r\n");
        if($data){
            fputs($this->fp, $poststring . "\r\n\r\n");
        }

        stream_set_timeout($this->fp,60);

        $output = "";
        $headers= "";
        $is_header = 1;
        while(!feof($this->fp)) {
            $buffer = fgets($this->fp, 128);

            if ($buffer == FALSE) {
                break;
            }
            if (!$is_header) {
            $output .= $buffer;
            }
            if ($buffer == "\r\n") {
                $is_header = 0;
            }
            if ($is_header) {
            $headers .= $buffer;
            }
        }
        fclose($this->fp);

        $head = explode("\r\n", $headers);
        if(!empty($head)) {
            foreach($head as $h) {
                if(strpos($h, ':') !== FALSE)
                    $rtn['header'][(substr($h, 0, strpos($h,':')))] = trim(substr($h,strpos($h,':')+1));
            }
        }
        
        list($protocol,$http_code,$message)=explode(" ",$head[0]);
        
        return array('http_code'=>$http_code,'content'=>json_decode($output));

    }

}

?>
